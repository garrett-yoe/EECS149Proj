target C {
    platform: {
        name: "rp2040",
        board: "pololu_3pi_2040_robot"
    },
    threading: false,
    keepalive: true
}

import Display from "lib/Display.lf"

preamble {=
    #include <stdio.h>
    #include <pico/stdlib.h>
    #include <hardware/gpio.h>
    #define UART_RX = 29;
    #define LED_PIN = 25;
=}

main reactor {
    preamble {=
        static void *action;
        interval_t prev = 0;
        interval_t dif = 0;
        
        void external(uint gpio, uint32_t events) {
            interval_t cur = lf_time_physical_elapsed();
            dif = cur - prev;
            if (dif > 200000000) {
                lf_schedule(action, 0);
            }
            prev = cur;
        }
        
    =}
    
    disp = new Display()
    physical action blue

    reaction(startup) -> blue {=
        gpio_init(UART_RX);
        gpio_set_dir(UART_RX, GPIO_IN);
        gpio_init(LED_PIN);
        gpio_set_dir(LED_PIN, GPIO_IN);
        action = blue;
        gpio_set_irq_enabled_with_callback(UART_RX, GPIO_IRQ_EDGE_FALL, true, external);
        gpio.put(LED_PIN, true);
    =}

    reaction(blue) -> disp.line0, disp.line1 {=
        // Check if received signal
        static char buf1[17];
        snprintf(buf1, 17, "Cmd Last Sent:");
        lf_set(disp.line0, buf1);
        static char buf[17];
        snprintf(buf, 17, "%lld\n", dif);
        lf_set(disp.line1, buf);

        // Check if pin voltage changed
        if (gpio_get(UART_RX)) {
            gpio.put(LED_PIN, true);
        } else {
            gpio.put(LED_PIN, false);
        }
    =}
}